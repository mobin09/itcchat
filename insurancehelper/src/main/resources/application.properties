spring.application.name=insurancehelper
server.port=8080
# based on .env files generates all the properties
#spring.config.import=optional:classpath:application-${spring.profiles.active}.properties,optional:classpath:application-${SPRING_PROFILES_ACTIVE}.properties,optional:file:./config/application-${spring.profiles.active}.properties,optional:file:./config/application-${SPRING_PROFILES_ACTIVE}.properties

# Server
server.port=${SERVER_PORT:8080}
spring.profiles.active=${SPRING_PROFILES_ACTIVE:default}


# H2 and JPA
spring.datasource.url=jdbc:h2:mem:insurancedb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console


# OpenAPI / Swagger (springdoc)
springdoc.api-docs.path=/v3/api-docs
#springdoc.swagger-ui.path=/swagger-ui.html


# JWT
jwt.secret=HI_THIS_IS_THE_my_secretkey_for_jwt_token_please_change_it_to_a_strong_one
#${JWT_SECRET}
jwt.expirationMillis=${JWT_EXPIRATION_MILLIS:3600000}


# Spring AI (Google Gemini)

spring.ai.openai.api-key=AIzaSyCJ1K-u1cwjUxyRS7er1NP33s8vallIuIY
spring.ai.openai.base-url=https://generativelanguage.googleapis.com/v1beta/openai
spring.ai.openai.chat.completions-path=/chat/completions
spring.ai.openai.chat.options.model=gemini-2.5-flash
